# Smart VAP Training Configuration
# Automatically detects local vs RunPod environment and configures accordingly

# Pod Configuration (for RunPod deployment)
pod:
  name: "vap-phase3-training"
  image: "runpod/pytorch:2.1.1-py3.10-cuda12.1.0"
  gpu_type: "RTX 4090"  # 24GB VRAM - excellent for our model size
  gpu_count: 1
  cpu_count: 8
  memory: 32  # GB
  volume_size: 50  # GB for dataset and checkpoints

# Environment Detection
environment:
  auto_detect: true  # Automatically detect local vs RunPod
  local:
    accelerator: "cpu"
    devices: 1
    precision: "32"
    batch_size: 16  # Smaller for CPU
    num_workers: 2  # Fewer workers for local
  runpod:
    accelerator: "gpu"
    devices: 1
    precision: "16-mixed"  # Mixed precision for GPU
    batch_size: 32  # Larger for GPU
    num_workers: 8  # More workers for GPU

# Training Parameters
training:
  num_epochs: 50  # Full training for production
  learning_rate: 5e-5
  weight_decay: 1e-4
  gradient_clip_val: 1.0
  accumulate_grad_batches: 1
  max_duration: 30.0  # Maximum audio duration in seconds

# Hardware Optimization (will be overridden by environment detection)
hardware:
  precision: "auto"  # Will be set by environment detection
  accelerator: "auto"  # Will be set by environment detection
  devices: "auto"  # Will be set by environment detection
  strategy: "auto"

# Monitoring and Logging
logging:
  log_every_n_steps: 10
  val_every_n_epochs: 1
  save_top_k: 3
  monitor: "val_overall_accuracy"
  mode: "max"

# Checkpointing
checkpointing:
  save_dir: "checkpoints/optimized"  # Relative path for portability
  filename: "vap_optimized_{epoch:02d}_{val_overall_accuracy:.4f}"

# Advanced Features
advanced:
  early_stopping:
    monitor: "val_overall_accuracy"
    patience: 10
    min_delta: 0.001
  model_checkpoint: true
  lr_monitor: true
  gradient_monitor: true

# Storage (relative paths for portability)
storage:
  dataset_path: "data"
  checkpoint_path: "checkpoints"
  results_path: "results"
  logs_path: "logs" 